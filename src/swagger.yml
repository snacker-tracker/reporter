openapi: 3.0.0
info:
  version: 0.0.1
  title: Snacker-Tracker-Reporter
  description: Tracking the snacks at the office

servers:
  - url: /v1

tags:
  - name: scans
    description: >
      Scanning barcodes
  - name: codes
    description: >
      Code management

paths:
  /stats/scan-counts:
    get:
      operationId: GetGlobalScanCounts
      tags:
        - stats
      parameters:
        - in: query
          name: period
          required: false
          schema:
            type: string
            default: daily
            enum:
              - daily
              - weekdaily
              - weekly
              - hourly

      responses:
        "200":
          description: |
            Return the list of scan counts by period
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalScanCounts"

  /stats/scan-counts/{code}:
    get:
      operationId: GetCodeScanCounts
      tags:
        - stats
      parameters:
        - in: path
          name: code
          required: true
          schema:
            $ref: "#/components/schemas/UPCCode"
        - in: query
          name: period
          required: false
          schema:
            type: string
            enum:
              - daily
              - weekdaily
              - hourly

      responses:
        "200":
          description: |
            Return the list of scan counts by period
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodeScanCounts"

  /stats/top-scans:
    get:
      operationId: GetTopScans
      tags:
        - stats
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
            default: 100
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
            default: 0
        - in: query
          name: from_date
          schema:
            type: string
            format: date-time
        - in: query
          name: to_date
          schema:
            type: string
            format: date-time

      responses:
        "200":
          description: |
            Return the list of most scanned items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopScanList"

  /codes:
    get:
      operationId: ListCodes
      tags:
        - codes
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
            default: 100
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
            default: 0
        - in: query
          name: categories
          required: false
          schema:
            $ref: "#/components/schemas/Category"

      responses:
        "200":
          description: |
            Return a list of participating products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodeList"

    post:
      operationId: CreateCode
      tags:
        - codes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCodePayload"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateCodePayload"

        required: true
      responses:
        "201":
          description: |
            Create a barcode
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Code"
#     callbacks:
#       # the name `onData` is a convenience locator
#       CodeCreated:
#         # when data is sent, it will be sent to the `callbackUrl` provided
#         # when making the subscription PLUS the suffix `/data`
#         'kinesis':
#           post:
#             requestBody:
#               description: subscription payload
#               content:
#                 application/json:
#                   schema:
#                     $ref: "#/components/schemas/CodeCreatedEvent"
#             responses: {}

  /codes/{code}:
    get:
      operationId: GetCode
      tags:
        - codes
      parameters:
        - in: path
          name: code
          required: true
          schema:
            $ref: "#/components/schemas/UPCCode"

      responses:
        "200":
          description: |
            Get a barcode
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Code"
        "404":
          description: |
            Barcode not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    patch:
      operationId: PatchCode
      tags:
        - codes
      parameters:
        - in: path
          name: code
          required: true
          schema:
            $ref: "#/components/schemas/UPCCode"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchCodePayload"
      responses:
        "201":
          description: |
            Update a barcode
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Code"
#     callbacks:
#       # the name `onData` is a convenience locator
#       CodePatched:
#         # when data is sent, it will be sent to the `callbackUrl` provided
#         # when making the subscription PLUS the suffix `/data`
#         'kinesis':
#           post:
#             requestBody:
#               description: subscription payload
#               content:
#                 application/json:
#                   schema:
#                     $ref: "#/components/schemas/CodePatchedEvent"
#             responses: {}

  /codes/{code}/pictures:
    get:
      operationId: ListCodePictures
      tags:
        - codes
      parameters:
        - in: path
          required: true
          name: code
          schema:
            $ref: "#/components/schemas/UPCCode"
      responses:
        "200":
          description: |
            Return a list of pictures for a code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodePictureList"
        "404":
          description: |
            Barcode not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    post:
      operationId: CreateCodePicture
      tags:
        - codes
      parameters:
        - in: path
          name: code
          required: true
          schema:
            $ref: "#/components/schemas/UPCCode"
      responses:
        "201":
          description: |
            Picture uploaded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodePicture"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                picture:
                  type: string
                  format: binary
#     callbacks:
#       # the name `onData` is a convenience locator
#       CodePictureCreated:
#         # when data is sent, it will be sent to the `callbackUrl` provided
#         # when making the subscription PLUS the suffix `/data`
#         'kinesis':
#           post:
#             requestBody:
#               description: subscription payload
#               content:
#                 application/json:
#                   schema:
#                     $ref: "#/components/schemas/CodePictureCreatedEvent"
#             responses: {}

  /scans:
    get:
      operationId: ListScans
      tags:
        - scans
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
            default: 100
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        "200":
          description: |
            Return a list of participating products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanList"

    post:
      operationId: CreateScan
      tags:
        - scans
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScanPayload"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateScanPayload"

        required: true
      responses:
        "201":
          description: |
            Record a scan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scan"
#     callbacks:
#       # the name `onData` is a convenience locator
#       ScanCreated:
#         # when data is sent, it will be sent to the `callbackUrl` provided
#         # when making the subscription PLUS the suffix `/data`
#         'kinesis':
#           post:
#             requestBody:
#               description: subscription payload
#               content:
#                 application/json:
#                   schema:
#                     $ref: "#/components/schemas/ScanCreatedEvent"
#             responses: {}

  /scans/{scanId}:
    parameters:
      - name: scanId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: GetScan
      tags:
        - scans
      responses:
        "200":
          description: |
            Scan Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scan"
        "404":
          description: |
            Scan not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      operationId: DeleteScan
      tags:
        - scans
      responses:
        "201":
          description: |
            Scan Deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scan"

  /categories:
    get:
      operationId: ListCategories
      tags:
        - categories
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
            default: 100
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
            default: 0
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: contains
          schema:
            type: string
      responses:
        200:
          description: |
            List of categories
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesList"

components:
  schemas:
    Pagination:
      type: object
      additionalProperties: false
      properties:
        size:
          $ref: "#/components/schemas/PaginationSize"
        next:
          $ref: "#/components/schemas/PaginationNext"

    PaginationSize:
      type: number
      format: int64

    PaginationNext:
      type: string

    ErrorResponse:
      type: object
      properties:
        message:
          type: string


    CategoriesList:
      type: object
      additionalProperties: false
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          items:
            $ref: "#/components/schemas/CategoryObject"

    CategoryObject:
      type: object
      additionalProperties: false
      required:
        - path
        - categories
        - count
      properties:
        path:
          type: string
        categories:
          $ref: "#/components/schemas/CategoryList"
        count:
          type: number
          format: int64

    Scan:
      type: object
      additionalProperties: false
      required:
        - id
        - code
        - location
        - scanned_at
        - created_at
      properties:
        id:
          type: string
          format: uuid
        code:
          $ref: "#/components/schemas/UPCCode"
        scanned_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time


    CreateScanPayload:
      type: object
      additionalProperties: false
      required:
        - code
        - location
      properties:
        scanned_at:
          type: string
          format: date-time
        code:
          $ref: "#/components/schemas/UPCCode"
        location:
          $ref: "#/components/schemas/ScannerLocation"

    ScanList:
      type: object
      additionalProperties: false
      required:
        - pagination
        - items
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Scan"

    Code:
      type: object
      additionalProperties: false
      required:
        - code
        - name
        - created_at
        - updated_at
      properties:
        code:
          $ref: "#/components/schemas/UPCCode"
        name:
          type: string
        url:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        categories:
          $ref: "#/components/schemas/CategoryList"

    CategoryList:
      type: array
      items:
        $ref: "#/components/schemas/Category"

    Category:
      type: string

    CreateCodePayload:
      type: object
      additionalProperties: false
      required:
        - code
        - name
      properties:
        code:
          $ref: "#/components/schemas/UPCCode"
        name:
          type: string
        url:
          type: string
        categories:
          $ref: "#/components/schemas/CategoryList"

    PatchCodePayload:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        categories:
          $ref: "#/components/schemas/CategoryList"

    CodeList:
      type: object
      additionalProperties: false
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Code"

    CodePictureList:
      type: object
      required:
        - items
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          items:
            $ref: "#/components/schemas/CodePicture"

    CodePicture:
      type: object
      additionalProperties: false
      required:
        - id
        - url
        - last_modified
        - size
      properties:
        id:
          $ref: "#/components/schemas/CodePictureId"
        url:
          $ref: "#/components/schemas/CodePictureUrl"
        last_modified:
          $ref: "#/components/schemas/CodePictureLastModified"
        size:
          $ref: "#/components/schemas/CodePictureSize"

    CodePictureId:
      type: string
      format: sha1

    CodePictureLastModified:
      type: string
      format: date-time

    CodePictureUrl:
      type: string
      format: url

    CodePictureSize:
      type: number
      format: int32

    GlobalScanCounts:
      type: object
      required:
        - items
      properties:
        items:
          oneOf:
            - type: array
              items:
                $ref: "#/components/schemas/DailyCodeScanCounts"
            - type: array
              items:
                $ref: "#/components/schemas/WeeklyCodeScanCounts"
            - type: array
              items:
                $ref: "#/components/schemas/WeekdailyCodeScanCounts"
            - type: array
              items:
                $ref: "#/components/schemas/HourlyCodeScanCounts"

    CodeScanCounts:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/DailyCodeScanCounts"
              - $ref: "#/components/schemas/WeekdailyCodeScanCounts"
              - $ref: "#/components/schemas/HourlyCodeScanCounts"

    DailyCodeScanCounts:
      type: object
      required:
        - count
        - date
      properties:
        count:
          type: number
          format: int64
        date:
          type: string
          format: date

    HourlyCodeScanCounts:
      type: object
      required:
        - count
        - hour
      properties:
        count:
          type: number
          format: int64
        hour:
          type: number
          format: int64

    WeekdailyCodeScanCounts:
      type: object
      required:
        - count
        - weekday
      properties:
        count:
          type: number
          format: int64
        weekday:
          type: number
          format: int64

    WeeklyCodeScanCounts:
      type: object
      required:
        - count
        - week
      properties:
        count:
          type: number
          format: int64
        week:
          type: string

    TopScanList:
      type: object
      required:
        - count
        - last_scan
        - first_scan
        - code
      properties:
        count:
          type: number
          format: int64
        last_scan:
          type: string
          format: date-time
        first_scan:
          type: string
          format: date-time
        code:
          $ref: "#/components/schemas/UPCCode"

    EventWrapper:
      type: object
      required:
        - id
        - timestamp
        - version
        - event
        - actor
      properties:
        id:
          $ref: "#/components/schemas/EventId"
        timestamp:
          $ref: "#/components/schemas/EventTimestamp"
        version:
          $ref: "#/components/schemas/EventVersion"
        event:
          $ref: "#/components/schemas/EventEvent"
        actor:
          $ref: "#/components/schemas/EventActor"

    EventId:
      type: string
      format: uuid

    EventTimestamp:
      type: string
      format: date-time

    EventVersion:
      type: string
      format: semver
      description: |
        A valid sem-ver string (eg, version of the backend)

    EventEvent:
      type: string

    EventActor:
      type: object
      required:
        - sub
      properties:
        sub:
          type: string
        issuer:
          type: string
          format: uri

    ScanCreatedEvent:
      type: object
      allOf:
        - $ref: "#/components/schemas/EventWrapper"
      required:
        - payload
      properties:
        payload:
          $ref: "#/components/schemas/Scan"
        event:
          type: string
          enum:
            - ScanCreated

    CodeCreatedEvent:
      type: object
      allOf:
        - $ref: "#/components/schemas/EventWrapper"
      required:
        - payload
      properties:
        payload:
          $ref: "#/components/schemas/Code"
        event:
          type: string
          enum:
            - CodeCreated

    CodePatchedEvent:
      type: object
      allOf:
        - $ref: "#/components/schemas/EventWrapper"
      required:
        - payload
      properties:
        payload:
          $ref: "#/components/schemas/Code"
        event:
          type: string
          enum:
            - CodePatched

    CodePictureCreatedEvent:
      type: object
      allOf:
        - $ref: "#/components/schemas/EventWrapper"
      required:
        - payload
      properties:
        payload:
          $ref: "#/components/schemas/CodePicture"
        event:
          type: string
          enum:
            - CodeCreated

    UPCCode:
      type: string
      format: upc

    ScannerLocation:
      type: string
      description: |
        The ID or location of the barcode scanner
