ingress:
  enabled: true
  hosts:
    - host: reporter.snacker-tracker.prod.k8s.fscker.org
      paths:
        - /
  tls:
    - secretName: reporter-snacker-tracker-prod-k8s-fscker-org-tls
      hosts:
        - reporter.snacker-tracker.prod.k8s.fscker.org

postgresql:
  global:
    postgresql:
      auth:
        database: snacker-tracker-reporter-prod
        username: snacker-tracker-reporter-prod
        password: UNDEFINED

config:
  env:
    PORT: "5000"
    ENVIRONMENT_NAME: prod
    USE_SWAGGER_VALIDATION: "true"
    DATABASE_HOST: snacker-tracker-reporter-prod-postgresql.snacker-tracker-prod.svc.cluster.local
    DATABASE_NAME: snacker-tracker-reporter-prod
    DATABASE_USERNAME: snacker-tracker-reporter-prod
    KINESIS_ENDPOINT: "http://kinesalite.aws.svc.cluster.local"
    S3_ENDPOINT: "https://s3.aws.k8s.fscker.org"
    AWS_ACCESS_KEY_ID: "AKIAIOSFODNN7EXAMPLE"
    REPORTER_BASE_URL: "http://snacker-tracker-reporter-prod.snacker-tracker-prod.svc.cluster.local/v1"
    OAUTH_CLIENT_ID: r4tEPwCFO148rAz0WYu2UEOvJxzOVsYM
    OAUTH_ISSUER: fscker-public.eu.auth0.com
    OAUTH_ENABLED: "true"
    AUTH0_AUDIENCE: snacker-tracker-reporter

  secrets:
    DATABASE_PASSWORD: "undefined"
    AWS_SECRET_ACCESS_KEY: "undefined"
    OAUTH_CLIENT_SECRET: "undefined"

resources:
  # NON-DEFAULT: We should *always* specify `requests`, but probably not `limits`
  requests:
    cpu: 0.01
    memory: 192Mi
